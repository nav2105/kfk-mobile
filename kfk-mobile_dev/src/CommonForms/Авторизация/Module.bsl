
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Не Параметры.Свойство("СменаПользователя") Тогда 
		ПолучитьКонстантыАвторизации();
	Иначе
		ОчиститьКонстантыАвторизации();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Отказ = Не АвторизацияВыполнена;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ПарольНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Элементы.Пароль.РежимПароля = НЕ Элементы.Пароль.РежимПароля;

КонецПроцедуры

&НаКлиенте
Процедура ПользовательПриИзменении(Элемент)
	УстановитьКонстантыАвторизации();
КонецПроцедуры

&НаКлиенте
Процедура ПарольПриИзменении(Элемент)
	УстановитьКонстантыАвторизации();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Авторизоваться(Команда)
	
	Если ПроверитьАвторизация() Тогда 
		
		ПараметрыАвторизации = Новый Структура("Пользователь", Пользователь);
		Оповестить("ВыполненаАвторизация", ПараметрыАвторизации);
		Закрыть();
	
	ИначеЕсли ЗначениеЗаполнено(Пользователь) Тогда 
		
		РезультатВыполнения = ОбменВызовСервера.ОтправитьПолучитьДанные();
		Если РезультатВыполнения.Выполнено Тогда
			АвторизацияВыполнена = Истина;
			Оповестить("ВыполненаАвторизация", Новый Структура("Пользователь", Пользователь));
			Оповестить("ОбновитьДатуСинхронизации");
			Оповестить("СинхронизацияЗавершена");
			Закрыть();
		Иначе
			Элементы.ДекорацияОшибка.Заголовок = РезультатВыполнения.Ошибка;
			Элементы.ДекорацияОшибка.Видимость = Истина;
		КонецЕсли;
		
	Иначе
		
		Элементы.ДекорацияОшибка.Заголовок = "Не указан пользователь";
		Элементы.ДекорацияОшибка.Видимость = Истина;
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьРаботу(Команда)
	ЗавершитьРаботуСистемы(Ложь);
КонецПроцедуры

#КонецОбласти

#Область ПроцедурыИФункцииОбщегоНазначения

&НаСервере
Процедура ПолучитьКонстантыАвторизации()
	
	НаборКонстант = Константы.СоздатьНабор("ПользовательЦентральнойБазы, Пароль");
	НаборКонстант.Прочитать();
	
	Пользователь = НаборКонстант.ПользовательЦентральнойБазы;
	Пароль = НаборКонстант.Пароль;
		
КонецПроцедуры

&НаСервере
Процедура ОчиститьКонстантыАвторизации()
	
	Константы.ПользовательЦентральнойБазы.Установить("");
	Константы.Пароль.Установить("");
	
КонецПроцедуры

&НаСервере
Процедура УстановитьКонстантыАвторизации()
	
	НаборКонстант = Константы.СоздатьНабор("ПользовательЦентральнойБазы, Пароль");
	НаборКонстант.ПользовательЦентральнойБазы = Пользователь;
	НаборКонстант.Пароль = Пароль;
	НаборКонстант.Записать();
		
КонецПроцедуры

&НаСервере
Функция ПроверитьАвторизация()
	
	Если Не ЗначениеЗаполнено(Константы.ДатаПоследнегоОбновления.Получить()) Тогда 
		АвторизацияВыполнена = Ложь;
		Возврат АвторизацияВыполнена;
	КонецЕсли;
	
	ЛокальныйПользователь = Справочники.Пользователи.НайтиПоНаименованию(Пользователь, Истина);
	Если ЛокальныйПользователь.Пустая() Или Не ЗначениеЗаполнено(ЛокальныйПользователь.Наименование) Тогда 
		АвторизацияВыполнена = Ложь;
		Возврат АвторизацияВыполнена;
	КонецЕсли;

	ХэшированиеДанных = Новый ХешированиеДанных(ХешФункция.CRC32);
	ХэшированиеДанных.Добавить(Пароль);

	Если ЛокальныйПользователь.ХешПароля = ХэшированиеДанных.ХешСумма Тогда 
		АвторизацияВыполнена = Истина;
		Возврат АвторизацияВыполнена;	
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции

#КонецОбласти
