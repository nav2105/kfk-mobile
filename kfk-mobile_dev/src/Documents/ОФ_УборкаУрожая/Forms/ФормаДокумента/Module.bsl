
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполностьКартинкуКонтейнеров();
	
	// 1 - сорт, 2 - не сорт, 0 - не запонлено
	// Изначально сорт указывался для всего документа, а не для контейнера. Необходимо понимать, где значение сортности не заполнено.
	РежимСканированияСорт = 1;
	
	ПереходНаИспользованиеСортностиВКонтейнерах();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОбновитьЗаголовокФормы();
	ОбщегоНазначенияКлиент.ИнициализироватьСканер();
		
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Barcode"  Тогда 
		
		ОбработатьШтрихкоды(Параметр, Источник);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("ЗаписьУборкаУрожая");
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	ОбщегоНазначенияКлиент.ОтключитьСканер();

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы


&НаКлиенте
Процедура Сорт(Команда)
	
	РежимСканированияСорт = 1;
	
КонецПроцедуры

&НаКлиенте
Процедура НеСорт(Команда)
	
	РежимСканированияСорт = 2;

КонецПроцедуры

&НаКлиенте
Процедура КонтейнерыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекущиеДанные = Элементы.Контейнеры.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	Если ТекущиеДанные.ПродукцияСортовая = 1 Тогда 
		ТекущиеДанные.ПродукцияСортовая = 2;
	Иначе
		ТекущиеДанные.ПродукцияСортовая = 1;	
	КонецЕсли;
	
	ВычислитьИтоги();
	Записать();
	
КонецПроцедуры

&НаКлиенте
Процедура КартинкаСохранитьНажатие(Элемент)
	
	//Если Не Объект.Контейнеры.Количество() = 0 Тогда 
	//	Записать();
	//КонецЕсли;
	//
	//Закрыть();
	
	Если ПроверитьЗаполнение() Тогда 
		Записать();
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РучнойВводШК(Команда)
	
	ОткрытьФорму("ОбщаяФорма.РучнойВводШК",,,,,,Новый ОписаниеОповещения("РучноВводШКЗавершение", ЭтотОбъект));
	
КонецПроцедуры

&НаКлиенте
Процедура РучноВводШКЗавершение(Результат, ДопПараметры = Неопределено) Экспорт
	
	Если Не ЗначениеЗаполнено(Результат) Тогда 
		Возврат;
	КонецЕсли;
	
	Оповестить("Barcode", Результат, "РучнойВводШК");
	
КонецПроцедуры

&НаКлиенте
Процедура СканированиеШК(Команда)
	
	#Если МобильноеПриложениеКлиент  Тогда
		
		Если Не СредстваМультимедиа.ПоддерживаетсяСканированиеШтрихКодов() Тогда 
			Сообщить("Устройство не поддерживает сканирование камерой");
			Возврат;
		КонецЕсли;
		
		ОбработчикСканирования = Новый ОписаниеОповещения("СканированиеЗавершение", ЭтаФорма);	
		ОбработчикЗакрытия = Новый ОписаниеОповещения("ЗакрытиеСканированияЗавершение", ЭтаФорма);
		
		Попытка
			СредстваМультимедиа.ПоказатьСканированиеШтрихКодов("Наведите камеру на штрихкод. Можно отсканировать сразу все контейнеры.", ОбработчикСканирования, ОбработчикЗакрытия, ТипШтрихКода.Линейный);
		Исключение
			СредстваМультимедиа.ЗакрытьСканированиеШтрихКодов();
			СредстваМультимедиа.ПоказатьСканированиеШтрихКодов("Наведите камеру на штрихкод. Можно отсканировать сразу все контейнеры.", ОбработчикСканирования, ОбработчикЗакрытия, ТипШтрихКода.Линейный);
		КонецПопытки;
		
	#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура КартинкаСканированиеШКНажатие(Элемент)
		
	СканированиеШК(Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура СканированиеЗавершение(Штрихкод, Результат, Сообщение, ДополнительныеПараметры) Экспорт
	
	Если Результат Тогда
		
		Оповестить("Barcode", Штрихкод, "ФотоШК");
		
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытиеСканированияЗавершение(ДополнительныеПараметры) Экспорт
	
	//
	
КонецПроцедуры


&НаКлиенте
Процедура ОценкаКачестваУборки(Команда)
	
	Если ПроверитьЗаполнение() Тогда 
		Записать();	
		ПараметрыЗаполнения = Новый Структура("Поле, Помология, Бригада", Объект.Поле, Объект.Помология, Объект.Бригада);
		ПараметрыФормы = Новый Структура("ЗначенияЗаполнения", ПараметрыЗаполнения);

		ОткрытьФорму("Документ.ОФ_ОценкаКачестваУборкиУрожая.ФормаОбъекта", ПараметрыФормы);
		
		Закрыть();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура КартинкаСоздатьОценкуНажатие(Элемент)

	ОценкаКачестваУборки(Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура КонтейнерыПослеУдаления(Элемент)
	
	ВычислитьИтоги();

КонецПроцедуры

&НаКлиенте
Процедура ВычислитьИтоги()
	
	Объект.ИтогоКонтейнеров = Объект.Контейнеры.Количество();
	Объект.ИтогоСортовых = Объект.Контейнеры.НайтиСтроки(Новый Структура("ПродукцияСортовая", 1)).Количество();
	Объект.ИтогоНеСортовых = Объект.Контейнеры.НайтиСтроки(Новый Структура("ПродукцияСортовая", 2)).Количество();
	
	ОбновитьЗаголовокФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьЗаголовокФормы()
	
	Если Объект.ИтогоСортовых > 0 И Объект.ИтогоНеСортовых > 0 Тогда  
		Заголовок = "Сорт - " + Строка(Объект.ИтогоСортовых) +  "       Не сорт - " + Строка(Объект.ИтогоНеСортовых);
	ИначеЕсли Объект.ИтогоСортовых > 0 Тогда  
		Заголовок = "Сорт - " + Строка(Объект.ИтогоСортовых);
	ИначеЕсли Объект.ИтогоНеСортовых > 0 Тогда  
		Заголовок = "Не сорт - " + Строка(Объект.ИтогоНеСортовых);
	Иначе
		Заголовок = "Регистрация контейнеров";	
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ПроцедурыИФункцииОбщегоНазначения

&НаКлиенте
Процедура ОбработатьШтрихкоды(Штрихкод, Источник)
	
	Если Лев(Штрихкод,2) = "HT" Тогда // сканирвоание бригады 
		
		НомерБригады = Прав(Штрихкод, СтрДлина(Штрихкод) - 2);
		НайденнаяБригада = ОбменВызовСервераПовтИсп.ПолучитьБригаду(НомерБригады);
		Если ЗначениеЗаполнено(НайденнаяБригада) Тогда 
			Объект.Бригада = НайденнаяБригада;	
			ТекущийЭлемент = Элементы.Бригада;
		КонецЕсли;
		
	Иначе //любой другой ШК считаем контейнером	
		Строки = Объект.Контейнеры.НайтиСтроки(Новый Структура("Штрихкод", Штрихкод));
		Если Строки.Количество() > 0 Тогда 
			СтрокаКонтейнера = Строки[0];
			СтрокаКонтейнера.ПродукцияСортовая = РежимСканированияСорт;
		Иначе
			СтрокаКонтейнера = Объект.Контейнеры.Добавить();
			СтрокаКонтейнера.Штрихкод = Штрихкод;
			СтрокаКонтейнера.ШтрихкодОтсканирован = (Источник = "ПодключаемоеОборудование"); 
			СтрокаКонтейнера.ДатаДобавления = ТекущаяДата();
			СтрокаКонтейнера.Картинка = БиблиотекаКартинок.КоробСтроки;
			СтрокаКонтейнера.ПродукцияСортовая = РежимСканированияСорт;
			Если ПроверитьЗаполнение() Тогда
				Записать();
			Иначе
				Модифицированность = Истина;
			КонецЕсли;
		КонецЕсли;
		
		ВычислитьИтоги();
		
		Элементы.Контейнеры.ТекущаяСтрока = СтрокаКонтейнера.ПолучитьИдентификатор();
		Элементы.СтраницыФормы.ТекущаяСтраница = Элементы.ГруппаКонтейнеры;
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Процедура ЗаполностьКартинкуКонтейнеров()
	
	Для Каждого строка из Объект.Контейнеры Цикл 
		строка.Картинка = БиблиотекаКартинок.КоробСтроки;	
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПереходНаИспользованиеСортностиВКонтейнерах()
	
	Строки = Объект.Контейнеры.НайтиСтроки(Новый Структура("ПродукцияСортовая", 0));
	Для Каждого Строка из Строки Цикл
		Если Объект.ПродукцияСортовая Тогда 
			Строка.ПродукцияСортовая = 1
		Иначе
			Строка.ПродукцияСортовая = 2;	
		КонецЕсли;
	КонецЦикла;
	
	Объект.ИтогоСортовых = Объект.Контейнеры.НайтиСтроки(Новый Структура("ПродукцияСортовая", 1)).Количество();
	Объект.ИтогоНеСортовых = Объект.Контейнеры.НайтиСтроки(Новый Структура("ПродукцияСортовая", 2)).Количество();

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПомологию()

	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ЭтапПроизводства2_2ВыходныеИзделия.Ссылка.Поле КАК Поле,
	                      |	ЭтапПроизводства2_2ВыходныеИзделия.Номенклатура.АпкПартия КАК Помология
	                      |ИЗ
	                      |	Документ.ЭтапПроизводства2_2.ВыходныеИзделия КАК ЭтапПроизводства2_2ВыходныеИзделия
	                      |ГДЕ
	                      |	НЕ ЭтапПроизводства2_2ВыходныеИзделия.Ссылка.ПометкаУдаления
	                      |	И ЭтапПроизводства2_2ВыходныеИзделия.Ссылка.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	                      |	И ЭтапПроизводства2_2ВыходныеИзделия.Ссылка.Поле = &Поле
	                      |
	                      |СГРУППИРОВАТЬ ПО
	                      |	ЭтапПроизводства2_2ВыходныеИзделия.Номенклатура.АпкПартия,
	                      |	ЭтапПроизводства2_2ВыходныеИзделия.Ссылка.Поле");
	
	Запрос.УстановитьПараметр("Поле", Объект.Поле);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(ТекущаяДата()));	
	Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(ТекущаяДата()));	
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() И Выборка.Количество() = 1 Тогда 
		Объект.Помология = Выборка.Помология;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПолеПриИзменении(Элемент)
	ЗаполнитьПомологию();
КонецПроцедуры

#КонецОбласти
